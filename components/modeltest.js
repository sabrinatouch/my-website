import React, { useRef } from 'react'
import { Canvas, useFrame } from '@react-three/fiber'
import { useGLTF, Stage, OrbitControls } from '@react-three/drei'

export default function ModelTest() {
  return (
    <Canvas shadows camera={{ position: [-9, 6, 9], fov: 20 }}>
        <ambientLight />
        <Stage adjustCamera={false}>
            <Model />
        </Stage>
    </Canvas>
  )
}

/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.13 myroom.glb --transform --simplify 
Files: myroom.glb [4.27MB] > myroom-transformed.glb [472.56KB] (89%)
*/

export function Model(props) {
  const { nodes, materials } = useGLTF('/myroom-transformed.glb')

  const myMesh = React.useRef();

  useFrame(() => {
    myMesh.current.rotation.y = Math.sin(Date.now() * 0.00015) * Math.PI * 0.15;
  });

  return (
    <group {...props} dispose={null} ref={myMesh}>
      <mesh geometry={nodes['floor_-_wood'].geometry} material={materials.PaletteMaterial001} position={[-0.006, -0.04, 0.008]} />
      <mesh geometry={nodes.mug.geometry} material={nodes.mug.material} position={[-0.69, 0.816, -0.648]} />
      <mesh geometry={nodes['mug_-_liquid'].geometry} material={materials.PaletteMaterial002} position={[-0.69, 0.816, -0.648]} />
      <mesh geometry={nodes['window_-_windows'].geometry} material={materials.PaletteMaterial003} position={[1.278, 1.164, -0.04]} />
      <instancedMesh args={[nodes.Circle008.geometry, materials.PaletteMaterial001, 5]} instanceMatrix={nodes.Circle008.instanceMatrix} />
      <instancedMesh args={[nodes.Circle009.geometry, materials.PaletteMaterial001, 5]} instanceMatrix={nodes.Circle009.instanceMatrix} />
    </group>
  )
}

useGLTF.preload('/myroom-transformed.glb')
